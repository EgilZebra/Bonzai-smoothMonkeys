var k=Object.create;var y=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,$=Object.prototype.hasOwnProperty;var f=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var Y=(e,t,r,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of j(t))!$.call(e,a)&&a!==r&&y(e,a,{get:()=>t[a],enumerable:!(s=A(t,a))||s.enumerable});return e};var m=(e,t,r)=>(r=e!=null?k(x(e)):{},Y(t||!e||!e.__esModule?y(r,"default",{value:e,enumerable:!0}):r,e));var D=f((re,_)=>{var K=async(e,t)=>({statusCode:e,headers:{"Conten-Type":"application/json"},body:JSON.stringify(t)});_.exports={responseMaker:K}});var b=f((ne,N)=>{var{DynamoDB:L}=require("@aws-sdk/client-dynamodb"),{DynamoDBDocument:R}=require("@aws-sdk/lib-dynamodb"),S=new L({region:process.env.AWS_REGION}),B=R.from(S);N.exports={db:B}});var V=f((oe,C)=>{C.exports={name:"dotenv",version:"16.4.5",description:"Loads environment variables from .env file",main:"lib/main.js",types:"lib/main.d.ts",exports:{".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},scripts:{"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard","lint-readme":"standard-markdown",pretest:"npm run lint && npm run dts-check",test:"tap tests/*.js --100 -Rspec","test:coverage":"tap --coverage-report=lcov",prerelease:"npm test",release:"standard-version"},repository:{type:"git",url:"git://github.com/motdotla/dotenv.git"},funding:"https://dotenvx.com",keywords:["dotenv","env",".env","environment","variables","config","settings"],readmeFilename:"README.md",license:"BSD-2-Clause",devDependencies:{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3",decache:"^4.6.1",sinon:"^14.0.1",standard:"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0",tap:"^16.3.0",tar:"^6.1.11",typescript:"^4.8.4"},engines:{node:">=12"},browser:{fs:!1}}});var T=f((se,u)=>{var g=require("fs"),h=require("path"),M=require("os"),U=require("crypto"),F=V(),E=F.version,P=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function q(e){let t={},r=e.toString();r=r.replace(/\r\n?/mg,`
`);let s;for(;(s=P.exec(r))!=null;){let a=s[1],n=s[2]||"";n=n.trim();let o=n[0];n=n.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),o==='"'&&(n=n.replace(/\\n/g,`
`),n=n.replace(/\\r/g,"\r")),t[a]=n}return t}function W(e){let t=I(e),r=i.configDotenv({path:t});if(!r.parsed){let o=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw o.code="MISSING_DATA",o}let s=w(e).split(","),a=s.length,n;for(let o=0;o<a;o++)try{let c=s[o].trim(),l=Q(r,c);n=i.decrypt(l.ciphertext,l.key);break}catch(c){if(o+1>=a)throw c}return i.parse(n)}function G(e){console.log(`[dotenv@${E}][INFO] ${e}`)}function J(e){console.log(`[dotenv@${E}][WARN] ${e}`)}function v(e){console.log(`[dotenv@${E}][DEBUG] ${e}`)}function w(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function Q(e,t){let r;try{r=new URL(t)}catch(c){if(c.code==="ERR_INVALID_URL"){let l=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw l.code="INVALID_DOTENV_KEY",l}throw c}let s=r.password;if(!s){let c=new Error("INVALID_DOTENV_KEY: Missing key part");throw c.code="INVALID_DOTENV_KEY",c}let a=r.searchParams.get("environment");if(!a){let c=new Error("INVALID_DOTENV_KEY: Missing environment part");throw c.code="INVALID_DOTENV_KEY",c}let n=`DOTENV_VAULT_${a.toUpperCase()}`,o=e.parsed[n];if(!o){let c=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${n} in your .env.vault file.`);throw c.code="NOT_FOUND_DOTENV_ENVIRONMENT",c}return{ciphertext:o,key:s}}function I(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(let r of e.path)g.existsSync(r)&&(t=r.endsWith(".vault")?r:`${r}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=h.resolve(process.cwd(),".env.vault");return g.existsSync(t)?t:null}function O(e){return e[0]==="~"?h.join(M.homedir(),e.slice(1)):e}function H(e){G("Loading env from encrypted .env.vault");let t=i._parseVault(e),r=process.env;return e&&e.processEnv!=null&&(r=e.processEnv),i.populate(r,t,e),{parsed:t}}function z(e){let t=h.resolve(process.cwd(),".env"),r="utf8",s=!!(e&&e.debug);e&&e.encoding?r=e.encoding:s&&v("No encoding is specified. UTF-8 is used by default");let a=[t];if(e&&e.path)if(!Array.isArray(e.path))a=[O(e.path)];else{a=[];for(let l of e.path)a.push(O(l))}let n,o={};for(let l of a)try{let d=i.parse(g.readFileSync(l,{encoding:r}));i.populate(o,d,e)}catch(d){s&&v(`Failed to load ${l} ${d.message}`),n=d}let c=process.env;return e&&e.processEnv!=null&&(c=e.processEnv),i.populate(c,o,e),n?{parsed:o,error:n}:{parsed:o}}function X(e){if(w(e).length===0)return i.configDotenv(e);let t=I(e);return t?i._configVault(e):(J(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`),i.configDotenv(e))}function Z(e,t){let r=Buffer.from(t.slice(-64),"hex"),s=Buffer.from(e,"base64"),a=s.subarray(0,12),n=s.subarray(-16);s=s.subarray(12,-16);try{let o=U.createDecipheriv("aes-256-gcm",r,a);return o.setAuthTag(n),`${o.update(s)}${o.final()}`}catch(o){let c=o instanceof RangeError,l=o.message==="Invalid key length",d=o.message==="Unsupported state or unable to authenticate data";if(c||l){let p=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw p.code="INVALID_DOTENV_KEY",p}else if(d){let p=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw p.code="DECRYPTION_FAILED",p}else throw o}}function ee(e,t,r={}){let s=!!(r&&r.debug),a=!!(r&&r.override);if(typeof t!="object"){let n=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw n.code="OBJECT_REQUIRED",n}for(let n of Object.keys(t))Object.prototype.hasOwnProperty.call(e,n)?(a===!0&&(e[n]=t[n]),s&&v(a===!0?`"${n}" is already defined and WAS overwritten`:`"${n}" is already defined and was NOT overwritten`)):e[n]=t[n]}var i={configDotenv:z,_configVault:H,_parseVault:W,config:X,decrypt:Z,parse:q,populate:ee};u.exports.configDotenv=i.configDotenv;u.exports._configVault=i._configVault;u.exports._parseVault=i._parseVault;u.exports.config=i.config;u.exports.decrypt=i.decrypt;u.exports.parse=i.parse;u.exports.populate=i.populate;u.exports=i});var ae=m(D()),ie=m(b());T().config();exports.handler=async e=>({statusCode:200,body:JSON.stringify({message:"Go Serverless v4! Your function executed successfully!"})});
//# sourceMappingURL=index.js.map
