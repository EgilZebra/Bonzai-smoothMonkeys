{
  "version": 3,
  "sources": ["../../../../../functions/services/responseMaker.js", "../../../../../data/index.js", "../../../../../functions/services/priceCalc.js", "../../../../../node_modules/uuid/dist/esm-node/max.js", "../../../../../node_modules/uuid/dist/esm-node/nil.js", "../../../../../node_modules/uuid/dist/esm-node/regex.js", "../../../../../node_modules/uuid/dist/esm-node/validate.js", "../../../../../node_modules/uuid/dist/esm-node/parse.js", "../../../../../node_modules/uuid/dist/esm-node/stringify.js", "../../../../../node_modules/uuid/dist/esm-node/rng.js", "../../../../../node_modules/uuid/dist/esm-node/v1.js", "../../../../../node_modules/uuid/dist/esm-node/v1ToV6.js", "../../../../../node_modules/uuid/dist/esm-node/v35.js", "../../../../../node_modules/uuid/dist/esm-node/md5.js", "../../../../../node_modules/uuid/dist/esm-node/v3.js", "../../../../../node_modules/uuid/dist/esm-node/native.js", "../../../../../node_modules/uuid/dist/esm-node/v4.js", "../../../../../node_modules/uuid/dist/esm-node/sha1.js", "../../../../../node_modules/uuid/dist/esm-node/v5.js", "../../../../../node_modules/uuid/dist/esm-node/v6.js", "../../../../../node_modules/uuid/dist/esm-node/v6ToV1.js", "../../../../../node_modules/uuid/dist/esm-node/v7.js", "../../../../../node_modules/uuid/dist/esm-node/version.js", "../../../../../node_modules/uuid/dist/esm-node/index.js", "../../../../../functions/Guest/makeReservation/index.js"],
  "sourcesContent": ["const responseMaker = async ( code, body ) => {\r\n    const response = {\r\n        statusCode: code,\r\n        headers: {\r\n            \"Conten-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    return response\r\n};\r\n\r\nmodule.exports = { responseMaker };", "const { DynamoDB } = require(\"@aws-sdk/client-dynamodb\");\r\nconst { DynamoDBDocument } = require(\"@aws-sdk/lib-dynamodb\");\r\n\r\nconst client = new DynamoDB({\r\n  region: process.env.AWS_REGION,\r\n});\r\n\r\nconst db = DynamoDBDocument.from(client);\r\n\r\nmodule.exports = { db };", "const priceCalc = async ( rooms ) => {\r\n    let total = 0\r\n    for ( i = 0 ; i < rooms.lenght ; i++ ) {\r\n        if ( rooms[i] < 11 ) {\r\n            total = total + 500;\r\n        } else if ( 10 < rooms[i] < 16) {\r\n            total = total + 1000\r\n        } else if ( rooms[i] > 15 ) {\r\n            total = total + 1500\r\n        }\r\n    }\r\n    return total\r\n}\r\n\r\n\r\nmodule.exports = { priceCalc }", "export default 'ffffffff-ffff-ffff-ffff-ffffffffffff';", "export default '00000000-0000-0000-0000-000000000000';", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;", "import REGEX from './regex.js';\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;", "import validate from './validate.js';\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n  let v;\n  const arr = new Uint8Array(16);\n\n  // Parse ########-....-....-....-............\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff;\n\n  // Parse ........-####-....-....-............\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff;\n\n  // Parse ........-....-####-....-............\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff;\n\n  // Parse ........-....-....-####-............\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff;\n\n  // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\nexport default parse;", "import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;", "import crypto from 'node:crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}", "import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\nlet _clockseq;\n\n// Previous uuid creation time\nlet _lastMSecs = 0;\nlet _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node;\n  let clockseq = options.clockseq;\n\n  // v1 only: Use cached `node` and `clockseq` values\n  if (!options._v6) {\n    if (!node) {\n      node = _nodeId;\n    }\n    if (clockseq == null) {\n      clockseq = _clockseq;\n    }\n  }\n\n  // Handle cases where we need entropy.  We do this lazily to minimize issues\n  // related to insufficient system entropy.  See #189\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    // Randomize node\n    if (node == null) {\n      node = [seedBytes[0], seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n\n      // v1 only: cache node value for reuse\n      if (!_nodeId && !options._v6) {\n        // per RFC4122 4.5: Set MAC multicast bit (v1 only)\n        node[0] |= 0x01; // Set multicast bit\n\n        _nodeId = node;\n      }\n    }\n\n    // Randomize clockseq\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n      if (_clockseq === undefined && !options._v6) {\n        _clockseq = clockseq;\n      }\n    }\n  }\n\n  // v1 & v6 timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so time is\n  // handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n  return buf || unsafeStringify(b);\n}\nexport default v1;", "import parse from './parse.js';\nimport { unsafeStringify } from './stringify.js';\n\n/**\n * Convert a v1 UUID to a v6 UUID\n *\n * @param {string|Uint8Array} uuid - The v1 UUID to convert to v6\n * @returns {string|Uint8Array} The v6 UUID as the same type as the `uuid` arg\n * (string or Uint8Array)\n */\nexport default function v1ToV6(uuid) {\n  const v1Bytes = typeof uuid === 'string' ? parse(uuid) : uuid;\n  const v6Bytes = _v1ToV6(v1Bytes);\n  return typeof uuid === 'string' ? unsafeStringify(v6Bytes) : v6Bytes;\n}\n\n// Do the field transformation needed for v1 -> v6\nfunction _v1ToV6(v1Bytes, randomize = false) {\n  return Uint8Array.of((v1Bytes[6] & 0x0f) << 4 | v1Bytes[7] >> 4 & 0x0f, (v1Bytes[7] & 0x0f) << 4 | (v1Bytes[4] & 0xf0) >> 4, (v1Bytes[4] & 0x0f) << 4 | (v1Bytes[5] & 0xf0) >> 4, (v1Bytes[5] & 0x0f) << 4 | (v1Bytes[0] & 0xf0) >> 4, (v1Bytes[0] & 0x0f) << 4 | (v1Bytes[1] & 0xf0) >> 4, (v1Bytes[1] & 0x0f) << 4 | (v1Bytes[2] & 0xf0) >> 4, 0x60 | v1Bytes[2] & 0x0f, v1Bytes[3], v1Bytes[8], v1Bytes[9], v1Bytes[10], v1Bytes[11], v1Bytes[12], v1Bytes[13], v1Bytes[14], v1Bytes[15]);\n}", "import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n  return bytes;\n}\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    }\n\n    // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n    if (buf) {\n      offset = offset || 0;\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n      return buf;\n    }\n    return unsafeStringify(bytes);\n  }\n\n  // Function#name is not settable on some platforms (#270)\n  try {\n    generateUUID.name = name;\n  } catch (err) {}\n\n  // For CommonJS default export support\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "import crypto from 'node:crypto';\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n  return crypto.createHash('md5').update(bytes).digest();\n}\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;", "import crypto from 'node:crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;", "import crypto from 'node:crypto';\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n  return crypto.createHash('sha1').update(bytes).digest();\n}\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;", "import { unsafeStringify } from './stringify.js';\nimport v1 from './v1.js';\nimport v1ToV6 from './v1ToV6.js';\n\n/**\n *\n * @param {object} options\n * @param {Uint8Array=} buf\n * @param {number=} offset\n * @returns\n */\nexport default function v6(options = {}, buf, offset = 0) {\n  // v6 is v1 with different field layout, so we start with a v1 UUID, albeit\n  // with slightly different behavior around how the clock_seq and node fields\n  // are randomized, which is why we call v1 with _v6: true.\n  let bytes = v1({\n    ...options,\n    _v6: true\n  }, new Uint8Array(16));\n\n  // Reorder the fields to v6 layout.\n  bytes = v1ToV6(bytes);\n\n  // Return as a byte array if requested\n  if (buf) {\n    for (let i = 0; i < 16; i++) {\n      buf[offset + i] = bytes[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(bytes);\n}", "import parse from './parse.js';\nimport { unsafeStringify } from './stringify.js';\n\n/**\n * Convert a v6 UUID to a v1 UUID\n *\n * @param {string|Uint8Array} uuid - The v6 UUID to convert to v6\n * @returns {string|Uint8Array} The v1 UUID as the same type as the `uuid` arg\n * (string or Uint8Array)\n */\nexport default function v6ToV1(uuid) {\n  const v6Bytes = typeof uuid === 'string' ? parse(uuid) : uuid;\n  const v1Bytes = _v6ToV1(v6Bytes);\n  return typeof uuid === 'string' ? unsafeStringify(v1Bytes) : v1Bytes;\n}\n\n// Do the field transformation needed for v6 -> v1\nfunction _v6ToV1(v6Bytes) {\n  return Uint8Array.of((v6Bytes[3] & 0x0f) << 4 | v6Bytes[4] >> 4 & 0x0f, (v6Bytes[4] & 0x0f) << 4 | (v6Bytes[5] & 0xf0) >> 4, (v6Bytes[5] & 0x0f) << 4 | v6Bytes[6] & 0x0f, v6Bytes[7], (v6Bytes[1] & 0x0f) << 4 | (v6Bytes[2] & 0xf0) >> 4, (v6Bytes[2] & 0x0f) << 4 | (v6Bytes[3] & 0xf0) >> 4, 0x10 | (v6Bytes[0] & 0xf0) >> 4, (v6Bytes[0] & 0x0f) << 4 | (v6Bytes[1] & 0xf0) >> 4, v6Bytes[8], v6Bytes[9], v6Bytes[10], v6Bytes[11], v6Bytes[12], v6Bytes[13], v6Bytes[14], v6Bytes[15]);\n}", "import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\n/**\n * UUID V7 - Unix Epoch time-based UUID\n *\n * The IETF has published RFC9562, introducing 3 new UUID versions (6,7,8). This\n * implementation of V7 is based on the accepted, though not yet approved,\n * revisions.\n *\n * RFC 9562:https://www.rfc-editor.org/rfc/rfc9562.html Universally Unique\n * IDentifiers (UUIDs)\n\n *\n * Sample V7 value:\n * https://www.rfc-editor.org/rfc/rfc9562.html#name-example-of-a-uuidv7-value\n *\n * Monotonic Bit Layout: RFC rfc9562.6.2 Method 1, Dedicated Counter Bits ref:\n *     https://www.rfc-editor.org/rfc/rfc9562.html#section-6.2-5.1\n *\n *   0                   1                   2                   3 0 1 2 3 4 5 6\n *   7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |                          unix_ts_ms                           |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |          unix_ts_ms           |  ver  |        seq_hi         |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |var|               seq_low               |        rand         |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |                             rand                              |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *\n * seq is a 31 bit serialized counter; comprised of 12 bit seq_hi and 19 bit\n * seq_low, and randomly initialized upon timestamp change. 31 bit counter size\n * was selected as any bitwise operations in node are done as _signed_ 32 bit\n * ints. we exclude the sign bit.\n */\n\nlet _seqLow = null;\nlet _seqHigh = null;\nlet _msecs = 0;\nfunction v7(options, buf, offset) {\n  options = options || {};\n\n  // initialize buffer and pointer\n  let i = buf && offset || 0;\n  const b = buf || new Uint8Array(16);\n\n  // rnds is Uint8Array(16) filled with random bytes\n  const rnds = options.random || (options.rng || rng)();\n\n  // milliseconds since unix epoch, 1970-01-01 00:00\n  const msecs = options.msecs !== undefined ? options.msecs : Date.now();\n\n  // seq is user provided 31 bit counter\n  let seq = options.seq !== undefined ? options.seq : null;\n\n  // initialize local seq high/low parts\n  let seqHigh = _seqHigh;\n  let seqLow = _seqLow;\n\n  // check if clock has advanced and user has not provided msecs\n  if (msecs > _msecs && options.msecs === undefined) {\n    _msecs = msecs;\n\n    // unless user provided seq, reset seq parts\n    if (seq !== null) {\n      seqHigh = null;\n      seqLow = null;\n    }\n  }\n\n  // if we have a user provided seq\n  if (seq !== null) {\n    // trim provided seq to 31 bits of value, avoiding overflow\n    if (seq > 0x7fffffff) {\n      seq = 0x7fffffff;\n    }\n\n    // split provided seq into high/low parts\n    seqHigh = seq >>> 19 & 0xfff;\n    seqLow = seq & 0x7ffff;\n  }\n\n  // randomly initialize seq\n  if (seqHigh === null || seqLow === null) {\n    seqHigh = rnds[6] & 0x7f;\n    seqHigh = seqHigh << 8 | rnds[7];\n    seqLow = rnds[8] & 0x3f; // pad for var\n    seqLow = seqLow << 8 | rnds[9];\n    seqLow = seqLow << 5 | rnds[10] >>> 3;\n  }\n\n  // increment seq if within msecs window\n  if (msecs + 10000 > _msecs && seq === null) {\n    if (++seqLow > 0x7ffff) {\n      seqLow = 0;\n      if (++seqHigh > 0xfff) {\n        seqHigh = 0;\n\n        // increment internal _msecs. this allows us to continue incrementing\n        // while staying monotonic. Note, once we hit 10k milliseconds beyond system\n        // clock, we will reset breaking monotonicity (after (2^31)*10000 generations)\n        _msecs++;\n      }\n    }\n  } else {\n    // resetting; we have advanced more than\n    // 10k milliseconds beyond system clock\n    _msecs = msecs;\n  }\n  _seqHigh = seqHigh;\n  _seqLow = seqLow;\n\n  // [bytes 0-5] 48 bits of local timestamp\n  b[i++] = _msecs / 0x10000000000 & 0xff;\n  b[i++] = _msecs / 0x100000000 & 0xff;\n  b[i++] = _msecs / 0x1000000 & 0xff;\n  b[i++] = _msecs / 0x10000 & 0xff;\n  b[i++] = _msecs / 0x100 & 0xff;\n  b[i++] = _msecs & 0xff;\n\n  // [byte 6] - set 4 bits of version (7) with first 4 bits seq_hi\n  b[i++] = seqHigh >>> 4 & 0x0f | 0x70;\n\n  // [byte 7] remaining 8 bits of seq_hi\n  b[i++] = seqHigh & 0xff;\n\n  // [byte 8] - variant (2 bits), first 6 bits seq_low\n  b[i++] = seqLow >>> 13 & 0x3f | 0x80;\n\n  // [byte 9] 8 bits seq_low\n  b[i++] = seqLow >>> 5 & 0xff;\n\n  // [byte 10] remaining 5 bits seq_low, 3 bits random\n  b[i++] = seqLow << 3 & 0xff | rnds[10] & 0x07;\n\n  // [bytes 11-15] always random\n  b[i++] = rnds[11];\n  b[i++] = rnds[12];\n  b[i++] = rnds[13];\n  b[i++] = rnds[14];\n  b[i++] = rnds[15];\n  return buf || unsafeStringify(b);\n}\nexport default v7;", "import validate from './validate.js';\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n  return parseInt(uuid.slice(14, 15), 16);\n}\nexport default version;", "export { default as MAX } from './max.js';\nexport { default as NIL } from './nil.js';\nexport { default as parse } from './parse.js';\nexport { default as stringify } from './stringify.js';\nexport { default as v1 } from './v1.js';\nexport { default as v1ToV6 } from './v1ToV6.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as v6 } from './v6.js';\nexport { default as v6ToV1 } from './v6ToV1.js';\nexport { default as v7 } from './v7.js';\nexport { default as validate } from './validate.js';\nexport { default as version } from './version.js';", "import { responseMaker } from \"../../services/responseMaker\"\r\nimport { db } from \"../../../data\"\r\nconst { v4: uuidv4 } = require('uuid')\r\nimport { priceCalc } from \"../../services/priceCalc\";\r\n\r\nexports.handler = async (event) => {\r\n    \r\n    // guets: string, rooms: [ number, number, number ], checkIn: Date, checkOut: Date, name: String, emil: String\r\n    const { guests, rooms, checkIn, checkOut, name, email } = JSON.parse(event.body);\r\n    console.log( guests, rooms, checkIn, checkOut, name, email );\r\n    const bookingID = uuidv4();\r\n\r\n    try {\r\n        const bookedRooms = avalibleRooms( rooms, checkIn, checkOut, bookingID )\r\n        console.log(bookedRooms);\r\n        const totalprice = priceCalc( bookedRooms )\r\n        console.log(totalprice);\r\n        const answer = await db.put({\r\n            TableName: \"Bookings\",\r\n            Item: {\r\n                BookingId: bookingID,\r\n                rooms: bookedRooms,\r\n                guests: guests,\r\n                totalprice: totalprice,\r\n                startDate: checkIn,\r\n                endDate: checkOut,\r\n                customer: name,\r\n                email: email\r\n            }  \r\n        })\r\n        return responseMaker(200, answer  )\r\n    } catch (error) {\r\n        return responseMaker( 500, )\r\n    } \r\n}"],
  "mappings": "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",
  "names": ["require_responseMaker", "__commonJSMin", "exports", "module", "responseMaker", "code", "body", "require_data", "__commonJSMin", "exports", "module", "DynamoDB", "DynamoDBDocument", "client", "db", "require_priceCalc", "__commonJSMin", "exports", "module", "priceCalc", "rooms", "total", "max_default", "init_max", "__esmMin", "nil_default", "init_nil", "__esmMin", "regex_default", "init_regex", "__esmMin", "validate", "uuid", "regex_default", "validate_default", "init_validate", "__esmMin", "init_regex", "parse", "uuid", "validate_default", "v", "arr", "parse_default", "init_parse", "__esmMin", "init_validate", "unsafeStringify", "arr", "offset", "byteToHex", "stringify", "uuid", "validate_default", "stringify_default", "init_stringify", "__esmMin", "init_validate", "i", "rng", "poolPtr", "rnds8Pool", "crypto", "import_node_crypto", "init_rng", "__esmMin", "v1", "options", "buf", "offset", "i", "b", "node", "clockseq", "_nodeId", "_clockseq", "seedBytes", "rng", "msecs", "nsecs", "_lastNSecs", "dt", "_lastMSecs", "tl", "tmh", "n", "unsafeStringify", "v1_default", "init_v1", "__esmMin", "init_rng", "init_stringify", "v1ToV6", "uuid", "v1Bytes", "parse_default", "v6Bytes", "_v1ToV6", "unsafeStringify", "randomize", "init_v1ToV6", "__esmMin", "init_parse", "init_stringify", "stringToBytes", "str", "bytes", "i", "v35", "name", "version", "hashfunc", "generateUUID", "value", "namespace", "buf", "offset", "_namespace", "parse_default", "unsafeStringify", "DNS", "URL", "init_v35", "__esmMin", "init_stringify", "init_parse", "md5", "bytes", "crypto", "import_node_crypto", "md5_default", "init_md5", "__esmMin", "v3", "v3_default", "init_v3", "__esmMin", "init_v35", "init_md5", "v35", "md5_default", "import_node_crypto", "native_default", "init_native", "__esmMin", "crypto", "v4", "options", "buf", "offset", "native_default", "rnds", "rng", "i", "unsafeStringify", "v4_default", "init_v4", "__esmMin", "init_native", "init_rng", "init_stringify", "sha1", "bytes", "crypto", "import_node_crypto", "sha1_default", "init_sha1", "__esmMin", "v5", "v5_default", "init_v5", "__esmMin", "init_v35", "init_sha1", "v35", "sha1_default", "v6", "options", "buf", "offset", "bytes", "v1_default", "v1ToV6", "i", "unsafeStringify", "init_v6", "__esmMin", "init_stringify", "init_v1", "init_v1ToV6", "v6ToV1", "uuid", "v6Bytes", "parse_default", "v1Bytes", "_v6ToV1", "unsafeStringify", "init_v6ToV1", "__esmMin", "init_parse", "init_stringify", "v7", "options", "buf", "offset", "i", "b", "rnds", "rng", "msecs", "seq", "seqHigh", "_seqHigh", "seqLow", "_seqLow", "_msecs", "unsafeStringify", "v7_default", "init_v7", "__esmMin", "init_rng", "init_stringify", "version", "uuid", "validate_default", "version_default", "init_version", "__esmMin", "init_validate", "esm_node_exports", "__export", "max_default", "nil_default", "parse_default", "stringify_default", "v1_default", "v1ToV6", "v3_default", "v4_default", "v5_default", "v6", "v6ToV1", "v7_default", "validate_default", "version_default", "init_esm_node", "__esmMin", "init_max", "init_nil", "init_parse", "init_stringify", "init_v1", "init_v1ToV6", "init_v3", "init_v4", "init_v5", "init_v6", "init_v6ToV1", "init_v7", "init_validate", "init_version", "import_responseMaker", "import_data", "import_priceCalc", "uuidv4", "event", "guests", "rooms", "checkIn", "checkOut", "name", "email", "bookingID", "bookedRooms", "totalprice", "answer"]
}
