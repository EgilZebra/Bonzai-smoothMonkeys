{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "AllReservationsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Bonzai-dev-allReservations"
      }
    },
    "MakeReservationLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Bonzai-dev-makeReservation"
      }
    },
    "AllReservationsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-9c7e3e1b-48dd",
          "S3Key": "serverless/Bonzai/dev/1726656666410-2024-09-18T10:51:06.410Z/Bonzai-allReservations.zip"
        },
        "Handler": "/functions/Employee/allReservations/index.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Bonzai-dev-allReservations",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps"
          }
        },
        "Role": "arn:aws:iam::390403901188:role/lambda-tester"
      },
      "DependsOn": [
        "AllReservationsLogGroup"
      ]
    },
    "MakeReservationLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-9c7e3e1b-48dd",
          "S3Key": "serverless/Bonzai/dev/1726656666410-2024-09-18T10:51:06.410Z/Bonzai-makeReservation.zip"
        },
        "Handler": "/functions/Guest/makeReservation/index.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "Bonzai-dev-makeReservation",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps"
          }
        },
        "Role": "arn:aws:iam::390403901188:role/lambda-tester"
      },
      "DependsOn": [
        "MakeReservationLogGroup"
      ]
    },
    "AllReservationsLambdaVersionLEW2XbwU9d3uG7patsrOkm8GmDGEaWqtOo9K3HmHE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AllReservationsLambdaFunction"
        },
        "CodeSha256": "2WboIHYHK4YDmCsDGCJVSasAO6Y4UuJGafnMVzklUj0="
      }
    },
    "MakeReservationLambdaVersion6vxwmgDi677Afk3h0keXO39s1XgGGZVbfg0KV3lvvIM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "MakeReservationLambdaFunction"
        },
        "CodeSha256": "F/hs0/p8n32yY03M7+uxENz2G3dnpcS3Yy2nkh8L1EE="
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-Bonzai",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "AllReservationsLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AllReservationsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationAllReservations": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "AllReservationsLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetBonzaiEmpReservation": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /bonzai/emp/reservation",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationAllReservations"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationAllReservations"
    },
    "MakeReservationLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "MakeReservationLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationMakeReservation": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "MakeReservationLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostBonaziGuestBoka": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /bonazi/guest/boka",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationMakeReservation"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationMakeReservation"
    },
    "BonzaiBooking": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "Bookings",
        "AttributeDefinitions": [
          {
            "AttributeName": "BookingId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "BookingId",
            "KeyType": "HASH"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    },
    "BonzaiRooms": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "Rooms",
        "AttributeDefinitions": [
          {
            "AttributeName": "roomId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "date",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "roomId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "date",
            "KeyType": "RANGE"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-eu-north-1-9c7e3e1b-48dd",
      "Export": {
        "Name": "sls-Bonzai-dev-ServerlessDeploymentBucketName"
      }
    },
    "AllReservationsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AllReservationsLambdaVersionLEW2XbwU9d3uG7patsrOkm8GmDGEaWqtOo9K3HmHE"
      },
      "Export": {
        "Name": "sls-Bonzai-dev-AllReservationsLambdaFunctionQualifiedArn"
      }
    },
    "MakeReservationLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "MakeReservationLambdaVersion6vxwmgDi677Afk3h0keXO39s1XgGGZVbfg0KV3lvvIM"
      },
      "Export": {
        "Name": "sls-Bonzai-dev-MakeReservationLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-Bonzai-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-Bonzai-dev-HttpApiUrl"
      }
    }
  }
}